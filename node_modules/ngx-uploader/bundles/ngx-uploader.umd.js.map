{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ngx-uploader.umd.js","webpack:///webpack/bootstrap 32dd996695abca2307ae","webpack:///external \"@angular/core\"","webpack:///./lib/src/ngx-uploader/classes/ngx-uploader.class.js","webpack:///./lib/src/ngx-uploader/directives/ng-file-drop.directive.js","webpack:///./lib/src/ngx-uploader/directives/ng-file-select.directive.js","webpack:///./lib/src/ngx-uploader/module/ngx-uploader.module.js","webpack:///external \"rxjs/Observable\"","webpack:///external \"rxjs/Subject\"","webpack:///external \"rxjs/add/observable/of\"","webpack:///external \"rxjs/add/observable/from\"","webpack:///external \"rxjs/add/operator/mergeMap\"","webpack:///external \"rxjs/add/operator/map\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_11__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","humanizeBytes","bytes","sizes","Math","floor","log","parseFloat","pow","toFixed","UploadStatus","NgUploaderService","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__","__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__","__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_from__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_mergeMap__","__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__","concurrency","Number","POSITIVE_INFINITY","_this","queue","serviceEvents","uploadScheduler","subs","mergeMap","upload","startUpload","subscribe","uploadOutput","emit","handleFiles","incomingFiles","_a","push","apply","map","file","uploadFile","fileIndex","id","generateId","size","type","form","FormData","progress","status","Queue","data","percentage","speed","speedHuman","startTime","endTime","eta","etaHuman","lastModifiedDate","sub","undefined","nativeFile","initInputEvents","input","event","uploadFileIndex","findIndex","next","filter","forEach","id_1","index","unsubscribe","Cancelled","find","splice","length","observer","output","err","error","complete","url","method","headers","reader","FileReader","xhr","XMLHttpRequest","time","Date","getTime","progressStartTime","addEventListener","e","lengthComputable","round","loaded","total","diff","ceil","Uploading","secondsToHuman","onreadystatechange","readyState","DONE","speedAverage","Done","responseStatus","response","JSON","parse","open","withCredentials","uploadFile_1","uploadIndex","append","fieldName","keys","key","setRequestHeader","send","abort","sec","toISOString","substr","random","toString","substring","NgFileDropDirective","__WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__","__decorate","decorators","target","desc","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","v","metadata","elementRef","stopEvent","stopPropagation","preventDefault","ngOnInit","options","el","nativeElement","uploadInput","ngOnDestroy","onDrop","dataTransfer","files","onDragOver","onDragLeave","Function","Event","selector","NgFileSelectDirective","fileListener","removeEventListener","value","__WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__","__WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__","__WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__","__WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__","NgUploaderModule","__WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__","__WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__","declarations"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,iBAAAA,QAAA,mBAAAA,QAAA,gBAAAA,QAAA,0BAAAA,QAAA,4BAAAA,QAAA,8BAAAA,QAAA,0BACA,kBAAAC,gBAAAC,IACAD,OAAA,2KAAAJ,GACA,gBAAAC,SACAA,QAAA,gBAAAD,EAAAG,QAAA,iBAAAA,QAAA,mBAAAA,QAAA,gBAAAA,QAAA,0BAAAA,QAAA,4BAAAA,QAAA,8BAAAA,QAAA,0BAEAJ,EAAA,gBAAAC,EAAAD,EAAA,iBAAAA,EAAA,mBAAAA,EAAA,gBAAAA,EAAA,0BAAAA,EAAA,4BAAAA,EAAA,8BAAAA,EAAA,2BACCO,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAf,OAGA,IAAAC,GAAAe,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAlB,WAUA,OANAa,GAAAE,GAAAI,KAAAlB,EAAAD,QAAAC,IAAAD,QAAAc,GAGAb,EAAAiB,GAAA,EAGAjB,EAAAD,QAvBA,GAAAgB,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAtB,EAAAuB,EAAAC,GACAV,EAAAW,EAAAzB,EAAAuB,IACAG,OAAAC,eAAA3B,EAAAuB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAA9B,GACA,GAAAuB,GAAAvB,KAAA+B,WACA,WAA2B,MAAA/B,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAa,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,IAGAvB,IAAAwB,EAAA,KDgBM,SAAUrC,EAAQD,GE7ExBC,EAAAD,QAAAM,GFmFM,SAAUL,EAAQsC,EAAqBzB,GAE7C,YGvEA,SAAA0B,GAAAC,GACA,OAAAA,EACA,cAEA,IACAC,IAAA,kCACAzB,EAAA0B,KAAAC,MAAAD,KAAAE,IAAAJ,GAAAE,KAAAE,IAFA,MAGA,OAAAC,aAAAL,EAAAE,KAAAI,IAHA,KAGA9B,IAAA+B,QAAA,QAAAN,EAAAzB,GHiE+BH,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOU,KAClEV,EAAuB,EAAIC,EAC7B1B,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOW,IAC9E,IGlFrBD,GHkFyBE,EAA8CrC,EAAoB,GAElEsC,GADsDtC,EAAoBiB,EAAEoB,GAC5BrC,EAAoB,IAEpEuC,GADwDvC,EAAoBiB,EAAEqB,GACjCtC,EAAoB,IAEjEwC,GADqDxC,EAAoBiB,EAAEsB,GACpBvC,EAAoB,IAE3EyC,GAD+DzC,EAAoBiB,EAAEuB,GAC5BxC,EAAoB,IAE7E0C,GADiE1C,EAAoBiB,EAAEwB,GAC5BzC,EAAoB,KAE/E2C,GADmE3C,EAAoBiB,EAAEyB,GACnC1C,EAAoB,IACZA,GAAoBiB,EAAE0B,IG9F7G,SAAAR,GACAA,IAAA,iBACAA,IAAA,yBACAA,IAAA,eACAA,IAAA,0BACCA,UAUD,IAAAC,GAAA,WACA,QAAAA,GAAAQ,OACA,KAAAA,IAAqCA,EAAAC,OAAAC,kBACrC,IAAAC,GAAAxD,IACAA,MAAAyD,SACAzD,KAAA0D,cAAA,GAAAZ,GAAA,aACA9C,KAAA2D,gBAAA,GAAAX,GAAA,QACAhD,KAAA4D,QACA5D,KAAA2D,gBACAE,SAAA,SAAAC,GAAyC,MAAAN,GAAAO,YAAAD,IAAoCT,GAC7EW,UAAA,SAAAC,GAAgD,MAAAT,GAAAE,cAAAQ,KAAAD,KA4MhD,MA1MApB,GAAAf,UAAAqC,YAAA,SAAAC,GACA,GAAAZ,GAAAxD,MACAqE,EAAArE,KAAAyD,OAAAa,KAAAC,MAAAF,KAAAG,IAAA1D,KAAAsD,EAAA,SAAAK,EAAA7D,GACA,GAAA8D,IACAC,UAAA/D,EACAgE,GAAApB,EAAAqB,aACA3D,KAAAuD,EAAAvD,KACA4D,KAAAL,EAAAK,KACAC,KAAAN,EAAAM,KACAC,KAAA,GAAAC,UACAC,UACAC,OAAAvC,EAAAwC,MACAC,MACAC,WAAA,EACAC,MAAA,EACAC,WAAArD,EAAA,QACAsD,UAAA,KACAC,QAAA,KACAC,IAAA,KACAC,SAAA,OAGAC,iBAAApB,EAAAoB,iBACAC,QAAAC,GACAC,WAAAvB,EAGA,OADAjB,GAAAE,cAAAQ,MAAsCa,KAAA,eAAAN,KAAAC,IACtCA,KAEA1E,KAAA0D,cAAAQ,MAAiCa,KAAA,mBACjC,IAAAV,IAEAxB,EAAAf,UAAAmE,gBAAA,SAAAC,GACA,GAAA1C,GAAAxD,IACAkG,GAAAlC,UAAA,SAAAmC,GACA,OAAAA,EAAApB,MACA,iBACA,GAAAqB,GAAA5C,EAAAC,MAAA4C,UAAA,SAAA5B,GAAiF,MAAAA,KAAA0B,EAAA1B,QACjF,IAAA2B,GAAAD,EAAA1B,MACAjB,EAAAG,gBAAA2C,MAAoD7B,KAAAjB,EAAAC,MAAA2C,GAAAD,SAEpD,MACA,iBACA3C,EAAAC,MAAA8C,OAAA,SAAA9B,GAAoE,MAAAA,GAAAS,SAAAC,SAAAvC,EAAAwC,QACpEoB,QAAA,SAAA/B,GAAmD,MAAAjB,GAAAG,gBAAA2C,MAAoC7B,OAAA0B,WACvF,MACA,cACA,GAAAM,GAAAN,EAAAvB,IAAA,IACA,KAAA6B,EACA,MAEA,IAAAC,GAAAlD,EAAAI,KAAAyC,UAAA,SAAAP,GAAqE,MAAAA,GAAAlB,KAAA6B,GACrE,SAAAC,GAAAlD,EAAAI,KAAA8C,GAAAZ,IAAA,CACAtC,EAAAI,KAAA8C,GAAAZ,IAAAa,aACA,IAAAhC,GAAAnB,EAAAC,MAAA4C,UAAA,SAAA5B,GAA+E,MAAAA,GAAAG,KAAA6B,KAC/E,IAAA9B,IACAnB,EAAAC,MAAAkB,GAAAO,SAAAC,OAAAvC,EAAAgE,UACApD,EAAAE,cAAAQ,MAAsDa,KAAA,YAAAN,KAAAjB,EAAAC,MAAAkB,MAGtD,KACA,iBACAnB,EAAAI,KAAA4C,QAAA,SAAAV,GACAA,OACAA,MAAAa,aAEA,IAAAlC,GAAAjB,EAAAC,MAAAoD,KAAA,SAAAnC,GAA2E,MAAAA,GAAAE,KAAAkB,EAAAlB,IAC3EH,KACAA,EAAAS,SAAAC,OAAAvC,EAAAgE,UACApD,EAAAE,cAAAQ,MAAsDa,KAAA,YAAAN,WAGtD,MACA,cACA,IAAA0B,EAAAvB,GACA,MAEA,IAAAhE,GAAA4C,EAAAC,MAAA4C,UAAA,SAAA5B,GAAmE,MAAAA,GAAAG,KAAAuB,EAAAvB,IACnE,SAAAhE,EAAA,CACA,GAAA6D,GAAAjB,EAAAC,MAAA7C,EACA4C,GAAAC,MAAAqD,OAAAlG,EAAA,GACA4C,EAAAE,cAAAQ,MAAkDa,KAAA,UAAAN,SAElD,KACA,iBACAjB,EAAAC,MAAAsD,SACAvD,EAAAC,SACAD,EAAAE,cAAAQ,MAAkDa,KAAA,oBAMlDlC,EAAAf,UAAAiC,YAAA,SAAAD,GACA,GAAAN,GAAAxD,IACA,WAAA+C,GAAA,oBAAAiE,GACA,GAAAlB,GAAAtC,EAAAkB,WAAAZ,EAAAW,KAAAX,EAAAqC,OACAnC,UAAA,SAAAiD,GACAD,EAAAV,KAAAW,IACa,SAAAC,GACbF,EAAAG,MAAAD,GACAF,EAAAI,YACa,WACbJ,EAAAI,YAEA5D,GAAAI,KAAAU,MAA6BM,GAAAd,EAAAW,KAAAG,GAAAkB,WAG7BjD,EAAAf,UAAA4C,WAAA,SAAAD,EAAA0B,GACA,GAAA3C,GAAAxD,IACA,WAAA+C,GAAA,oBAAAiE,GACA,GAAAK,GAAAlB,EAAAkB,KAAA,GACAC,EAAAnB,EAAAmB,QAAA,OACAjC,EAAAc,EAAAd,SACAkC,EAAApB,EAAAoB,YACAC,EAAA,GAAAC,YACAC,EAAA,GAAAC,gBACAC,GAAA,GAAAC,OAAAC,UACAC,EAAAtD,EAAAS,SAAAG,MAAAZ,EAAAS,SAAAG,KAAAI,WAAAmC,EACArC,EAAA,EACAI,EAAA,IACA+B,GAAA5D,OAAAkE,iBAAA,oBAAAC,GACA,GAAAA,EAAAC,iBAAA,CACA,GAAA5C,GAAAhD,KAAA6F,MAAA,IAAAF,EAAAG,OAAAH,EAAAI,OACAC,GAAA,GAAAT,OAAAC,UAAAF,CACArC,GAAAjD,KAAA6F,MAAAF,EAAAG,OAAAE,EAAA,KACAP,EAAAtD,EAAAS,SAAAG,MAAAZ,EAAAS,SAAAG,KAAAI,YAAA,GAAAoC,OAAAC,UACAnC,EAAArD,KAAAiG,MAAAN,EAAAI,MAAAJ,EAAAG,QAAA7C,GACAd,EAAAS,UACAC,OAAAvC,EAAA4F,UACAnD,MACAC,aACAC,QACAC,WAAArD,EAAAoD,GAAA,KACAE,UAAAsC,EACArC,QAAA,KACAC,MACAC,SAAApC,EAAAiF,eAAA9C,KAGAqB,EAAAV,MAAmCvB,KAAA,YAAAN,YAEtB,GACbiD,EAAA5D,OAAAkE,iBAAA,iBAAAC,GACAjB,EAAAG,MAAAc,GACAjB,EAAAI,aAEAM,EAAAgB,mBAAA,WACA,GAAAhB,EAAAiB,aAAAhB,eAAAiB,KAAA,CACA,GAAAC,GAAAvG,KAAA6F,MAAA1D,EAAAK,OAAA,GAAA+C,OAAAC,UAAAC,GAAA,IACAtD,GAAAS,UACAC,OAAAvC,EAAAkG,KACAzD,MACAC,WAAA,IACAC,MAAAsD,EACArD,WAAArD,EAAA0G,GAAA,KACApD,UAAAsC,EACArC,SAAA,GAAAmC,OAAAC,UACAnC,MACAC,SAAApC,EAAAiF,eAAA9C,GAAA,KAGAlB,EAAAsE,eAAArB,EAAAvC,MACA,KACAV,EAAAuE,SAAAC,KAAAC,MAAAxB,EAAAsB,UAEA,MAAAf,GACAxD,EAAAuE,SAAAtB,EAAAsB,SAEAhC,EAAAV,MAAmCvB,KAAA,OAAAN,SACnCuC,EAAAI,aAGAM,EAAAyB,KAAA7B,EAAAD,GAAA,GACAK,EAAA0B,kBAAAjD,EAAAiD,eACA,KACA,GAAAC,GAAA5E,EAAAuB,WACAsD,EAAA9F,EAAAC,MAAA4C,UAAA,SAAA5B,GAAyE,MAAAA,GAAAuB,aAAAqD,GACzE7F,GAAAC,MAAA6F,GAAApE,SAAAC,SAAAvC,EAAAgE,WACAI,EAAAI,WAEA3C,EAAAO,KAAAuE,OAAApD,EAAAqD,WAAA,OAAAH,IAAAnI,MACAG,OAAAoI,KAAApE,GAAAmB,QAAA,SAAAkD,GAA0D,MAAAjF,GAAAO,KAAAuE,OAAAG,EAAArE,EAAAqE,MAC1DrI,OAAAoI,KAAAlC,GAAAf,QAAA,SAAAkD,GAA6D,MAAAhC,GAAAiC,iBAAAD,EAAAnC,EAAAmC,MAC7DlG,EAAAE,cAAAQ,MAA0Ca,KAAA,QAAAN,SAC1CiD,EAAAkC,KAAAnF,EAAAO,MAEA,MAAAiD,GACAjB,EAAAI,WAEA,kBACAM,EAAAmC,QACArC,EAAAqC,YAIAhH,EAAAf,UAAA2G,eAAA,SAAAqB,GACA,UAAAjC,MAAA,IAAAiC,GAAAC,cAAAC,OAAA,OAEAnH,EAAAf,UAAA+C,WAAA,WACA,MAAAvC,MAAA2H,SAAAC,SAAA,IAAAC,UAAA,IAEAtH,MH8GM,SAAUjD,EAAQsC,EAAqBzB,GAE7C,YAC+BA,GAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOkI,IAC9E,IAAItH,GAA8CrC,EAAoB,GI/V3F4J,GJgW+E5J,EAAoBiB,EAAEoB,GIhWrGrC,EAAA,IAAA6J,EAAAtK,WAAAsK,YAAA,SAAAC,EAAAC,EAAAd,EAAAe,GACA,GAAAxJ,GAAAD,EAAA0J,UAAA3D,OAAA4D,EAAA3J,EAAA,EAAAwJ,EAAA,OAAAC,IAAApJ,OAAAuJ,yBAAAJ,EAAAd,GAAAe,CACA,oBAAAI,UAAA,kBAAAA,SAAAC,SAAAH,EAAAE,QAAAC,SAAAP,EAAAC,EAAAd,EAAAe,OACA,QAAA7J,GAAA2J,EAAAxD,OAAA,EAA4CnG,GAAA,EAAQA,KAAAK,EAAAsJ,EAAA3J,MAAA+J,GAAA3J,EAAA,EAAAC,EAAA0J,GAAA3J,EAAA,EAAAC,EAAAuJ,EAAAd,EAAAiB,GAAA1J,EAAAuJ,EAAAd,KAAAiB,EACpD,OAAA3J,GAAA,GAAA2J,GAAAtJ,OAAAC,eAAAkJ,EAAAd,EAAAiB,MAEAI,EAAA/K,WAAA+K,YAAA,SAAAC,EAAAC,GACA,mBAAAJ,UAAA,kBAAAA,SAAAK,SAAA,MAAAL,SAAAK,SAAAF,EAAAC,IAIAb,EAAA,WACA,QAAAA,GAAAe,GACAnL,KAAAmL,aACAnL,KAAAoL,UAAA,SAAAnD,GACAA,EAAAoD,kBACApD,EAAAqD,kBAEAtL,KAAAiE,aAAA,GAAAnB,GAAA,aA+EA,MA7EAsH,GAAAtI,UAAAyJ,SAAA,WACA,GAAA/H,GAAAxD,KACAqD,EAAArD,KAAAwL,SAAAxL,KAAAwL,QAAAnI,aAAAC,OAAAC,iBACAvD,MAAA8D,OAAA,GAAAuG,GAAA,EAAAhH,GACArD,KAAAyL,GAAAzL,KAAAmL,WAAAO,cACA1L,KAAA8D,OAAAJ,cAAAM,UAAA,SAAAmC,GACA3C,EAAAS,aAAAC,KAAAiC,KAEAnG,KAAA2L,sBAAA7I,GAAA,cACA9C,KAAA8D,OAAAmC,gBAAAjG,KAAA2L,aAEA3L,KAAAyL,GAAAzD,iBAAA,OAAAhI,KAAAoL,WAAA,GACApL,KAAAyL,GAAAzD,iBAAA,YAAAhI,KAAAoL,WAAA,GACApL,KAAAyL,GAAAzD,iBAAA,WAAAhI,KAAAoL,WAAA,IAEAhB,EAAAtI,UAAA8J,YAAA,WACA5L,KAAA2L,aACA3L,KAAA2L,YAAAhF,eAGAyD,EAAAtI,UAAA+J,OAAA,SAAA5D,GACAA,EAAAoD,kBACApD,EAAAqD,gBACA,IAAAnF,IAAqBpB,KAAA,OACrB/E,MAAAiE,aAAAC,KAAAiC,GACAnG,KAAA8D,OAAAK,YAAA8D,EAAA6D,aAAAC,QAEA3B,EAAAtI,UAAAkK,WAAA,SAAA/D,GACA,GAAAA,EAAA,CAGA,GAAA9B,IAAqBpB,KAAA,WACrB/E,MAAAiE,aAAAC,KAAAiC,KAEAiE,EAAAtI,UAAAmK,YAAA,SAAAhE,GACA,GAAAA,EAAA,CAGA,GAAA9B,IAAqBpB,KAAA,UACrB/E,MAAAiE,aAAAC,KAAAiC,KAEAmE,GACAjJ,OAAAyB,EAAA,SACAiI,EAAA,cAAA1J,SACA+I,EAAAtI,UAAA,kBACAwI,GACAjJ,OAAAyB,EAAA,SACAiI,EAAA,cAAAjI,EAAA,eACAsH,EAAAtI,UAAA,sBACAwI,GACAjJ,OAAAyB,EAAA,UACAiI,EAAA,cAAAjI,EAAA,eACAsH,EAAAtI,UAAA,uBACAwI,GACAjJ,OAAAyB,EAAA,iCACAiI,EAAA,cAAAmB,UACAnB,EAAA,qBAAA1J,SACA0J,EAAA,6BACAX,EAAAtI,UAAA,eACAwI,GACAjJ,OAAAyB,EAAA,qCACAiI,EAAA,cAAAmB,UACAnB,EAAA,qBAAAoB,QACApB,EAAA,6BACAX,EAAAtI,UAAA,mBACAwI,GACAjJ,OAAAyB,EAAA,sCACAiI,EAAA,cAAAmB,UACAnB,EAAA,qBAAAoB,QACApB,EAAA,6BACAX,EAAAtI,UAAA,oBACAsI,EAAAE,GACAjJ,OAAAyB,EAAA,YACAsJ,SAAA,iBAEArB,EAAA,qBAAAjI,EAAA,cACAsH,OJ0WM,SAAUxK,EAAQsC,EAAqBzB,GAE7C,YAC+BA,GAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOmK,IAC9E,IAAIvJ,GAA8CrC,EAAoB,GK9c3F4J,GL+c+E5J,EAAoBiB,EAAEoB,GK/crGrC,EAAA,IAAA6J,EAAAtK,WAAAsK,YAAA,SAAAC,EAAAC,EAAAd,EAAAe,GACA,GAAAxJ,GAAAD,EAAA0J,UAAA3D,OAAA4D,EAAA3J,EAAA,EAAAwJ,EAAA,OAAAC,IAAApJ,OAAAuJ,yBAAAJ,EAAAd,GAAAe,CACA,oBAAAI,UAAA,kBAAAA,SAAAC,SAAAH,EAAAE,QAAAC,SAAAP,EAAAC,EAAAd,EAAAe,OACA,QAAA7J,GAAA2J,EAAAxD,OAAA,EAA4CnG,GAAA,EAAQA,KAAAK,EAAAsJ,EAAA3J,MAAA+J,GAAA3J,EAAA,EAAAC,EAAA0J,GAAA3J,EAAA,EAAAC,EAAAuJ,EAAAd,EAAAiB,GAAA1J,EAAAuJ,EAAAd,KAAAiB,EACpD,OAAA3J,GAAA,GAAA2J,GAAAtJ,OAAAC,eAAAkJ,EAAAd,EAAAiB,MAEAI,EAAA/K,WAAA+K,YAAA,SAAAC,EAAAC,GACA,mBAAAJ,UAAA,kBAAAA,SAAAK,SAAA,MAAAL,SAAAK,SAAAF,EAAAC,IAIAoB,EAAA,WACA,QAAAA,GAAAlB,GACA,GAAA3H,GAAAxD,IACAA,MAAAmL,aACAnL,KAAAsM,aAAA,WACA9I,EAAAiI,GAAAM,OACAvI,EAAAM,OAAAK,YAAAX,EAAAiI,GAAAM,QAGA/L,KAAAiE,aAAA,GAAAnB,GAAA,aAuCA,MArCAuJ,GAAAvK,UAAAyJ,SAAA,WACA,GAAA/H,GAAAxD,KACAqD,EAAArD,KAAAwL,SAAAxL,KAAAwL,QAAAnI,aAAAC,OAAAC,iBACAvD,MAAA8D,OAAA,GAAAuG,GAAA,EAAAhH,GACArD,KAAAyL,GAAAzL,KAAAmL,WAAAO,cACA1L,KAAAyL,GAAAzD,iBAAA,SAAAhI,KAAAsM,cAAA,GACAtM,KAAA8D,OAAAJ,cAAAM,UAAA,SAAAmC,GACA3C,EAAAS,aAAAC,KAAAiC,KAEAnG,KAAA2L,sBAAA7I,GAAA,cACA9C,KAAA8D,OAAAmC,gBAAAjG,KAAA2L,cAGAU,EAAAvK,UAAA8J,YAAA,WACA5L,KAAAyL,GAAAc,oBAAA,SAAAvM,KAAAsM,cAAA,GACAtM,KAAA2L,aACA3L,KAAA2L,YAAAhF,eAGA2D,GACAjJ,OAAAyB,EAAA,SACAiI,EAAA,cAAA1J,SACAgL,EAAAvK,UAAA,kBACAwI,GACAjJ,OAAAyB,EAAA,SACAiI,EAAA,cAAAjI,EAAA,eACAuJ,EAAAvK,UAAA,sBACAwI,GACAjJ,OAAAyB,EAAA,UACAiI,EAAA,cAAAjI,EAAA,eACAuJ,EAAAvK,UAAA,uBACAuK,EAAA/B,GACAjJ,OAAAyB,EAAA,YACAsJ,SAAA,mBAEArB,EAAA,qBAAAjI,EAAA,cACAuJ,OLydM,SAAUzM,EAAQsC,EAAqBzB,GAE7C,YACAY,QAAOC,eAAeY,EAAqB,cAAgBsK,OAAO,GAC7C,IAAIC,GAA6EhM,EAAoB,EAC3EA,GAAoBQ,EAAEiB,EAAqB,mBAAoB,WAAa,MAAOuK,GAA8E,GAC3L,IAAIC,GAA6EjM,EAAoB,EAC3EA,GAAoBQ,EAAEiB,EAAqB,eAAgB,WAAa,MAAOwK,GAA8E,IAC7JjM,EAAoBQ,EAAEiB,EAAqB,gBAAiB,WAAa,MAAOwK,GAA8E,IAC9JjM,EAAoBQ,EAAEiB,EAAqB,oBAAqB,WAAa,MAAOwK,GAA8E,GAC5L,IAAIC,GAAsFlM,EAAoB,EACpFA,GAAoBQ,EAAEiB,EAAqB,wBAAyB,WAAa,MAAOyK,GAAuF,GACzM,IAAIC,GAAoFnM,EAAoB,EAClFA,GAAoBQ,EAAEiB,EAAqB,sBAAuB,WAAa,MAAO0K,GAAqF,KASpN,SAAUhN,EAAQsC,EAAqBzB,GAE7C,YAC+BA,GAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAO2K,IAC9E,IAAI/J,GAA8CrC,EAAoB,GAElEqM,GADsDrM,EAAoBiB,EAAEoB,GACTrC,EAAoB,IM/iBhHsM,EAAAtM,EAAA,GAAA6J,EAAAtK,WAAAsK,YAAA,SAAAC,EAAAC,EAAAd,EAAAe,GACA,GAAAxJ,GAAAD,EAAA0J,UAAA3D,OAAA4D,EAAA3J,EAAA,EAAAwJ,EAAA,OAAAC,IAAApJ,OAAAuJ,yBAAAJ,EAAAd,GAAAe,CACA,oBAAAI,UAAA,kBAAAA,SAAAC,SAAAH,EAAAE,QAAAC,SAAAP,EAAAC,EAAAd,EAAAe,OACA,QAAA7J,GAAA2J,EAAAxD,OAAA,EAA4CnG,GAAA,EAAQA,KAAAK,EAAAsJ,EAAA3J,MAAA+J,GAAA3J,EAAA,EAAAC,EAAA0J,GAAA3J,EAAA,EAAAC,EAAAuJ,EAAAd,EAAAiB,GAAA1J,EAAAuJ,EAAAd,KAAAiB,EACpD,OAAA3J,GAAA,GAAA2J,GAAAtJ,OAAAC,eAAAkJ,EAAAd,EAAAiB,MAKAkC,EAAA,WACA,QAAAA,MAcA,MAZAA,GAAAvC,GACAjJ,OAAAyB,EAAA,WACAkK,cACAD,EAAA,EACAD,EAAA,GAEAnN,SACAoN,EAAA,EACAD,EAAA,MAGAD,ONyjBM,SAAUjN,EAAQD,GOhlBxBC,EAAAD,QAAAO,GPslBM,SAAUN,EAAQD,GQtlBxBC,EAAAD,QAAAQ,GR4lBM,SAAUP,EAAQD,GS5lBxBC,EAAAD,QAAAS,GTkmBM,SAAUR,EAAQD,GUlmBxBC,EAAAD,QAAAU,GVwmBM,SAAUT,EAAQD,GWxmBxBC,EAAAD,QAAAW,GX8mBM,SAAUV,EAAQD,GY9mBxBC,EAAAD,QAAAY","file":"ngx-uploader.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/Subject\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeMap\"), require(\"rxjs/add/operator/map\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngx-uploader\", [\"@angular/core\", \"rxjs/Observable\", \"rxjs/Subject\", \"rxjs/add/observable/of\", \"rxjs/add/observable/from\", \"rxjs/add/operator/mergeMap\", \"rxjs/add/operator/map\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-uploader\"] = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/Subject\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeMap\"), require(\"rxjs/add/operator/map\"));\n\telse\n\t\troot[\"ngx-uploader\"] = factory(root[\"@angular/core\"], root[\"rxjs/Observable\"], root[\"rxjs/Subject\"], root[\"rxjs/add/observable/of\"], root[\"rxjs/add/observable/from\"], root[\"rxjs/add/operator/mergeMap\"], root[\"rxjs/add/operator/map\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/Subject\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeMap\"), require(\"rxjs/add/operator/map\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngx-uploader\", [\"@angular/core\", \"rxjs/Observable\", \"rxjs/Subject\", \"rxjs/add/observable/of\", \"rxjs/add/observable/from\", \"rxjs/add/operator/mergeMap\", \"rxjs/add/operator/map\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-uploader\"] = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/Subject\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeMap\"), require(\"rxjs/add/operator/map\"));\n\telse\n\t\troot[\"ngx-uploader\"] = factory(root[\"@angular/core\"], root[\"rxjs/Observable\"], root[\"rxjs/Subject\"], root[\"rxjs/add/observable/of\"], root[\"rxjs/add/observable/from\"], root[\"rxjs/add/operator/mergeMap\"], root[\"rxjs/add/operator/map\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return UploadStatus; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = humanizeBytes;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgUploaderService; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_from__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_from__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_mergeMap__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_mergeMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__);\n\n\n\n\n\n\n\nvar UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[UploadStatus[\"Queue\"] = 0] = \"Queue\";\n    UploadStatus[UploadStatus[\"Uploading\"] = 1] = \"Uploading\";\n    UploadStatus[UploadStatus[\"Done\"] = 2] = \"Done\";\n    UploadStatus[UploadStatus[\"Cancelled\"] = 3] = \"Cancelled\";\n})(UploadStatus || (UploadStatus = {}));\nfunction humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    var k = 1024;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nvar NgUploaderService = (function () {\n    function NgUploaderService(concurrency) {\n        if (concurrency === void 0) { concurrency = Number.POSITIVE_INFINITY; }\n        var _this = this;\n        this.queue = [];\n        this.serviceEvents = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.uploadScheduler = new __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__[\"Subject\"]();\n        this.subs = [];\n        this.uploadScheduler\n            .mergeMap(function (upload) { return _this.startUpload(upload); }, concurrency)\n            .subscribe(function (uploadOutput) { return _this.serviceEvents.emit(uploadOutput); });\n    }\n    NgUploaderService.prototype.handleFiles = function (incomingFiles) {\n        var _this = this;\n        (_a = this.queue).push.apply(_a, [].map.call(incomingFiles, function (file, i) {\n            var uploadFile = {\n                fileIndex: i,\n                id: _this.generateId(),\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                form: new FormData(),\n                progress: {\n                    status: UploadStatus.Queue,\n                    data: {\n                        percentage: 0,\n                        speed: 0,\n                        speedHuman: humanizeBytes(0) + \"/s\",\n                        startTime: null,\n                        endTime: null,\n                        eta: null,\n                        etaHuman: null\n                    }\n                },\n                lastModifiedDate: file.lastModifiedDate,\n                sub: undefined,\n                nativeFile: file\n            };\n            _this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n            return uploadFile;\n        }));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n        var _a;\n    };\n    NgUploaderService.prototype.initInputEvents = function (input) {\n        var _this = this;\n        input.subscribe(function (event) {\n            switch (event.type) {\n                case 'uploadFile':\n                    var uploadFileIndex = _this.queue.findIndex(function (file) { return file === event.file; });\n                    if (uploadFileIndex !== -1 && event.file) {\n                        _this.uploadScheduler.next({ file: _this.queue[uploadFileIndex], event: event });\n                    }\n                    break;\n                case 'uploadAll':\n                    var files = _this.queue.filter(function (file) { return file.progress.status === UploadStatus.Queue; });\n                    files.forEach(function (file) { return _this.uploadScheduler.next({ file: file, event: event }); });\n                    break;\n                case 'cancel':\n                    var id_1 = event.id || null;\n                    if (!id_1) {\n                        return;\n                    }\n                    var index = _this.subs.findIndex(function (sub) { return sub.id === id_1; });\n                    if (index !== -1 && _this.subs[index].sub) {\n                        _this.subs[index].sub.unsubscribe();\n                        var fileIndex = _this.queue.findIndex(function (file) { return file.id === id_1; });\n                        if (fileIndex !== -1) {\n                            _this.queue[fileIndex].progress.status = UploadStatus.Cancelled;\n                            _this.serviceEvents.emit({ type: 'cancelled', file: _this.queue[fileIndex] });\n                        }\n                    }\n                    break;\n                case 'cancelAll':\n                    _this.subs.forEach(function (sub) {\n                        if (sub.sub) {\n                            sub.sub.unsubscribe();\n                        }\n                        var file = _this.queue.find(function (uploadFile) { return uploadFile.id === sub.id; });\n                        if (file) {\n                            file.progress.status = UploadStatus.Cancelled;\n                            _this.serviceEvents.emit({ type: 'cancelled', file: file });\n                        }\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    var i = _this.queue.findIndex(function (file) { return file.id === event.id; });\n                    if (i !== -1) {\n                        var file = _this.queue[i];\n                        _this.queue.splice(i, 1);\n                        _this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (_this.queue.length) {\n                        _this.queue = [];\n                        _this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    };\n    NgUploaderService.prototype.startUpload = function (upload) {\n        var _this = this;\n        return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"](function (observer) {\n            var sub = _this.uploadFile(upload.file, upload.event)\n                .subscribe(function (output) {\n                observer.next(output);\n            }, function (err) {\n                observer.error(err);\n                observer.complete();\n            }, function () {\n                observer.complete();\n            });\n            _this.subs.push({ id: upload.file.id, sub: sub });\n        });\n    };\n    NgUploaderService.prototype.uploadFile = function (file, event) {\n        var _this = this;\n        return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"](function (observer) {\n            var url = event.url || '';\n            var method = event.method || 'POST';\n            var data = event.data || {};\n            var headers = event.headers || {};\n            var reader = new FileReader();\n            var xhr = new XMLHttpRequest();\n            var time = new Date().getTime();\n            var progressStartTime = (file.progress.data && file.progress.data.startTime) || time;\n            var speed = 0;\n            var eta = null;\n            xhr.upload.addEventListener('progress', function (e) {\n                if (e.lengthComputable) {\n                    var percentage = Math.round((e.loaded * 100) / e.total);\n                    var diff = new Date().getTime() - time;\n                    speed = Math.round(e.loaded / diff * 1000);\n                    progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n                    eta = Math.ceil((e.total - e.loaded) / speed);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: humanizeBytes(speed) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: null,\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta)\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', function (e) {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    var speedAverage = Math.round(file.size / (new Date().getTime() - progressStartTime) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: humanizeBytes(speedAverage) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: new Date().getTime(),\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta || 0)\n                        }\n                    };\n                    file.responseStatus = xhr.status;\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            try {\n                var uploadFile_1 = file.nativeFile;\n                var uploadIndex = _this.queue.findIndex(function (file) { return file.nativeFile === uploadFile_1; });\n                if (_this.queue[uploadIndex].progress.status === UploadStatus.Cancelled) {\n                    observer.complete();\n                }\n                file.form.append(event.fieldName || 'file', uploadFile_1, uploadFile_1.name);\n                Object.keys(data).forEach(function (key) { return file.form.append(key, data[key]); });\n                Object.keys(headers).forEach(function (key) { return xhr.setRequestHeader(key, headers[key]); });\n                _this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(file.form);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return function () {\n                xhr.abort();\n                reader.abort();\n            };\n        });\n    };\n    NgUploaderService.prototype.secondsToHuman = function (sec) {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    };\n    NgUploaderService.prototype.generateId = function () {\n        return Math.random().toString(36).substring(7);\n    };\n    return NgUploaderService;\n}());\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgFileDropDirective; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__ = __webpack_require__(1);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar NgFileDropDirective = (function () {\n    function NgFileDropDirective(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.uploadOutput = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgFileDropDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        var concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        this.upload = new __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__[\"a\" /* NgUploaderService */](concurrency);\n        this.el = this.elementRef.nativeElement;\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    };\n    NgFileDropDirective.prototype.ngOnDestroy = function () {\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    NgFileDropDirective.prototype.onDrop = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    };\n    NgFileDropDirective.prototype.onDragOver = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    };\n    NgFileDropDirective.prototype.onDragLeave = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    };\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(),\n        __metadata(\"design:type\", Object)\n    ], NgFileDropDirective.prototype, \"options\", void 0);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(),\n        __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n    ], NgFileDropDirective.prototype, \"uploadInput\", void 0);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"])(),\n        __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n    ], NgFileDropDirective.prototype, \"uploadOutput\", void 0);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('drop', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDrop\", null);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('dragover', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDragOver\", null);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('dragleave', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDragLeave\", null);\n    NgFileDropDirective = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"])({\n            selector: '[ngFileDrop]'\n        }),\n        __metadata(\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]])\n    ], NgFileDropDirective);\n    return NgFileDropDirective;\n}());\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgFileSelectDirective; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__ = __webpack_require__(1);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar NgFileSelectDirective = (function () {\n    function NgFileSelectDirective(elementRef) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.fileListener = function () {\n            if (_this.el.files) {\n                _this.upload.handleFiles(_this.el.files);\n            }\n        };\n        this.uploadOutput = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgFileSelectDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        var concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        this.upload = new __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__[\"a\" /* NgUploaderService */](concurrency);\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n    };\n    NgFileSelectDirective.prototype.ngOnDestroy = function () {\n        this.el.removeEventListener('change', this.fileListener, false);\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(),\n        __metadata(\"design:type\", Object)\n    ], NgFileSelectDirective.prototype, \"options\", void 0);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(),\n        __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n    ], NgFileSelectDirective.prototype, \"uploadInput\", void 0);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"])(),\n        __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n    ], NgFileSelectDirective.prototype, \"uploadOutput\", void 0);\n    NgFileSelectDirective = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"])({\n            selector: '[ngFileSelect]'\n        }),\n        __metadata(\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]])\n    ], NgFileSelectDirective);\n    return NgFileSelectDirective;\n}());\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__ = __webpack_require__(5);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgUploaderModule\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__ = __webpack_require__(1);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"UploadStatus\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"humanizeBytes\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgUploaderService\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__ = __webpack_require__(3);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgFileSelectDirective\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__ = __webpack_require__(2);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgFileDropDirective\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__[\"a\"]; });\n\n\n\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgUploaderModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__ = __webpack_require__(3);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nvar NgUploaderModule = (function () {\n    function NgUploaderModule() {\n    }\n    NgUploaderModule = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__[\"a\" /* NgFileSelectDirective */],\n                __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__[\"a\" /* NgFileDropDirective */]\n            ],\n            exports: [\n                __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__[\"a\" /* NgFileSelectDirective */],\n                __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__[\"a\" /* NgFileDropDirective */]\n            ]\n        })\n    ], NgUploaderModule);\n    return NgUploaderModule;\n}());\n\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// ngx-uploader.umd.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 32dd996695abca2307ae","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0","import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/map';\nexport var UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[UploadStatus[\"Queue\"] = 0] = \"Queue\";\n    UploadStatus[UploadStatus[\"Uploading\"] = 1] = \"Uploading\";\n    UploadStatus[UploadStatus[\"Done\"] = 2] = \"Done\";\n    UploadStatus[UploadStatus[\"Cancelled\"] = 3] = \"Cancelled\";\n})(UploadStatus || (UploadStatus = {}));\nexport function humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    var k = 1024;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nvar NgUploaderService = (function () {\n    function NgUploaderService(concurrency) {\n        if (concurrency === void 0) { concurrency = Number.POSITIVE_INFINITY; }\n        var _this = this;\n        this.queue = [];\n        this.serviceEvents = new EventEmitter();\n        this.uploadScheduler = new Subject();\n        this.subs = [];\n        this.uploadScheduler\n            .mergeMap(function (upload) { return _this.startUpload(upload); }, concurrency)\n            .subscribe(function (uploadOutput) { return _this.serviceEvents.emit(uploadOutput); });\n    }\n    NgUploaderService.prototype.handleFiles = function (incomingFiles) {\n        var _this = this;\n        (_a = this.queue).push.apply(_a, [].map.call(incomingFiles, function (file, i) {\n            var uploadFile = {\n                fileIndex: i,\n                id: _this.generateId(),\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                form: new FormData(),\n                progress: {\n                    status: UploadStatus.Queue,\n                    data: {\n                        percentage: 0,\n                        speed: 0,\n                        speedHuman: humanizeBytes(0) + \"/s\",\n                        startTime: null,\n                        endTime: null,\n                        eta: null,\n                        etaHuman: null\n                    }\n                },\n                lastModifiedDate: file.lastModifiedDate,\n                sub: undefined,\n                nativeFile: file\n            };\n            _this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n            return uploadFile;\n        }));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n        var _a;\n    };\n    NgUploaderService.prototype.initInputEvents = function (input) {\n        var _this = this;\n        input.subscribe(function (event) {\n            switch (event.type) {\n                case 'uploadFile':\n                    var uploadFileIndex = _this.queue.findIndex(function (file) { return file === event.file; });\n                    if (uploadFileIndex !== -1 && event.file) {\n                        _this.uploadScheduler.next({ file: _this.queue[uploadFileIndex], event: event });\n                    }\n                    break;\n                case 'uploadAll':\n                    var files = _this.queue.filter(function (file) { return file.progress.status === UploadStatus.Queue; });\n                    files.forEach(function (file) { return _this.uploadScheduler.next({ file: file, event: event }); });\n                    break;\n                case 'cancel':\n                    var id_1 = event.id || null;\n                    if (!id_1) {\n                        return;\n                    }\n                    var index = _this.subs.findIndex(function (sub) { return sub.id === id_1; });\n                    if (index !== -1 && _this.subs[index].sub) {\n                        _this.subs[index].sub.unsubscribe();\n                        var fileIndex = _this.queue.findIndex(function (file) { return file.id === id_1; });\n                        if (fileIndex !== -1) {\n                            _this.queue[fileIndex].progress.status = UploadStatus.Cancelled;\n                            _this.serviceEvents.emit({ type: 'cancelled', file: _this.queue[fileIndex] });\n                        }\n                    }\n                    break;\n                case 'cancelAll':\n                    _this.subs.forEach(function (sub) {\n                        if (sub.sub) {\n                            sub.sub.unsubscribe();\n                        }\n                        var file = _this.queue.find(function (uploadFile) { return uploadFile.id === sub.id; });\n                        if (file) {\n                            file.progress.status = UploadStatus.Cancelled;\n                            _this.serviceEvents.emit({ type: 'cancelled', file: file });\n                        }\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    var i = _this.queue.findIndex(function (file) { return file.id === event.id; });\n                    if (i !== -1) {\n                        var file = _this.queue[i];\n                        _this.queue.splice(i, 1);\n                        _this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (_this.queue.length) {\n                        _this.queue = [];\n                        _this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    };\n    NgUploaderService.prototype.startUpload = function (upload) {\n        var _this = this;\n        return new Observable(function (observer) {\n            var sub = _this.uploadFile(upload.file, upload.event)\n                .subscribe(function (output) {\n                observer.next(output);\n            }, function (err) {\n                observer.error(err);\n                observer.complete();\n            }, function () {\n                observer.complete();\n            });\n            _this.subs.push({ id: upload.file.id, sub: sub });\n        });\n    };\n    NgUploaderService.prototype.uploadFile = function (file, event) {\n        var _this = this;\n        return new Observable(function (observer) {\n            var url = event.url || '';\n            var method = event.method || 'POST';\n            var data = event.data || {};\n            var headers = event.headers || {};\n            var reader = new FileReader();\n            var xhr = new XMLHttpRequest();\n            var time = new Date().getTime();\n            var progressStartTime = (file.progress.data && file.progress.data.startTime) || time;\n            var speed = 0;\n            var eta = null;\n            xhr.upload.addEventListener('progress', function (e) {\n                if (e.lengthComputable) {\n                    var percentage = Math.round((e.loaded * 100) / e.total);\n                    var diff = new Date().getTime() - time;\n                    speed = Math.round(e.loaded / diff * 1000);\n                    progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n                    eta = Math.ceil((e.total - e.loaded) / speed);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: humanizeBytes(speed) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: null,\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta)\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', function (e) {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    var speedAverage = Math.round(file.size / (new Date().getTime() - progressStartTime) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: humanizeBytes(speedAverage) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: new Date().getTime(),\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta || 0)\n                        }\n                    };\n                    file.responseStatus = xhr.status;\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            try {\n                var uploadFile_1 = file.nativeFile;\n                var uploadIndex = _this.queue.findIndex(function (file) { return file.nativeFile === uploadFile_1; });\n                if (_this.queue[uploadIndex].progress.status === UploadStatus.Cancelled) {\n                    observer.complete();\n                }\n                file.form.append(event.fieldName || 'file', uploadFile_1, uploadFile_1.name);\n                Object.keys(data).forEach(function (key) { return file.form.append(key, data[key]); });\n                Object.keys(headers).forEach(function (key) { return xhr.setRequestHeader(key, headers[key]); });\n                _this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(file.form);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return function () {\n                xhr.abort();\n                reader.abort();\n            };\n        });\n    };\n    NgUploaderService.prototype.secondsToHuman = function (sec) {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    };\n    NgUploaderService.prototype.generateId = function () {\n        return Math.random().toString(36).substring(7);\n    };\n    return NgUploaderService;\n}());\nexport { NgUploaderService };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/classes/ngx-uploader.class.js\n// module id = 1\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, EventEmitter, Input, Output, HostListener } from '@angular/core';\nimport { NgUploaderService } from '../classes/ngx-uploader.class';\nvar NgFileDropDirective = (function () {\n    function NgFileDropDirective(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.uploadOutput = new EventEmitter();\n    }\n    NgFileDropDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        var concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        this.upload = new NgUploaderService(concurrency);\n        this.el = this.elementRef.nativeElement;\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof EventEmitter) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    };\n    NgFileDropDirective.prototype.ngOnDestroy = function () {\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    NgFileDropDirective.prototype.onDrop = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    };\n    NgFileDropDirective.prototype.onDragOver = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    };\n    NgFileDropDirective.prototype.onDragLeave = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgFileDropDirective.prototype, \"options\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", EventEmitter)\n    ], NgFileDropDirective.prototype, \"uploadInput\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", EventEmitter)\n    ], NgFileDropDirective.prototype, \"uploadOutput\", void 0);\n    __decorate([\n        HostListener('drop', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDrop\", null);\n    __decorate([\n        HostListener('dragover', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDragOver\", null);\n    __decorate([\n        HostListener('dragleave', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDragLeave\", null);\n    NgFileDropDirective = __decorate([\n        Directive({\n            selector: '[ngFileDrop]'\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef])\n    ], NgFileDropDirective);\n    return NgFileDropDirective;\n}());\nexport { NgFileDropDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/directives/ng-file-drop.directive.js\n// module id = 2\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { NgUploaderService } from '../classes/ngx-uploader.class';\nvar NgFileSelectDirective = (function () {\n    function NgFileSelectDirective(elementRef) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.fileListener = function () {\n            if (_this.el.files) {\n                _this.upload.handleFiles(_this.el.files);\n            }\n        };\n        this.uploadOutput = new EventEmitter();\n    }\n    NgFileSelectDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        var concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        this.upload = new NgUploaderService(concurrency);\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof EventEmitter) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n    };\n    NgFileSelectDirective.prototype.ngOnDestroy = function () {\n        this.el.removeEventListener('change', this.fileListener, false);\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgFileSelectDirective.prototype, \"options\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", EventEmitter)\n    ], NgFileSelectDirective.prototype, \"uploadInput\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", EventEmitter)\n    ], NgFileSelectDirective.prototype, \"uploadOutput\", void 0);\n    NgFileSelectDirective = __decorate([\n        Directive({\n            selector: '[ngFileSelect]'\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef])\n    ], NgFileSelectDirective);\n    return NgFileSelectDirective;\n}());\nexport { NgFileSelectDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/directives/ng-file-select.directive.js\n// module id = 3\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { NgFileDropDirective } from '../directives/ng-file-drop.directive';\nimport { NgFileSelectDirective } from '../directives/ng-file-select.directive';\nvar NgUploaderModule = (function () {\n    function NgUploaderModule() {\n    }\n    NgUploaderModule = __decorate([\n        NgModule({\n            declarations: [\n                NgFileSelectDirective,\n                NgFileDropDirective\n            ],\n            exports: [\n                NgFileSelectDirective,\n                NgFileDropDirective\n            ]\n        })\n    ], NgUploaderModule);\n    return NgUploaderModule;\n}());\nexport { NgUploaderModule };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/module/ngx-uploader.module.js\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Observable\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Subject\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/observable/of\"\n// module id = 8\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/observable/from\"\n// module id = 9\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/mergeMap\"\n// module id = 10\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/map\"\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}
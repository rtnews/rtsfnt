{"version":3,"file":"angular2-leaflet.js","sources":["../leaflet/core/leaflet.directive.js","../leaflet/core/leaflet.directive.wrapper.js","../leaflet/layers/leaflet-layer-diff.model.js","../leaflet/layers/leaflet-layers.util.js","../leaflet/layers/leaflet-layers.directive.js","../leaflet/core/leaflet.util.js","../leaflet/layers/control/leaflet-layers-object-diff.model.js","../leaflet/layers/control/leaflet-control-layers.wrapper.js","../leaflet/layers/control/leaflet-control-layers.directive.js","../leaflet/layers/control/leaflet-control-layers-config.model.js","../leaflet/layers/base/leaflet-baselayers.directive.js","../leaflet/leaflet.module.js","../leaflet/layers/control/leaflet-control-layers.util.js","../leaflet/layers/leaflet-tile-layer-definition.model.js"],"sourcesContent":["import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport * as L from 'leaflet';\nvar LeafletDirective = (function () {\n    function LeafletDirective(el) {\n        this.DEFAULT_ZOOM = 1;\n        this.DEFAULT_CENTER = L.latLng([38.907192, -77.036871]);\n        this.DEFAULT_FPZ_OPTIONS = {};\n        this.fitBoundsOptions = this.DEFAULT_FPZ_OPTIONS;\n        this.panOptions = this.DEFAULT_FPZ_OPTIONS;\n        this.zoomOptions = this.DEFAULT_FPZ_OPTIONS;\n        this.zoomPanOptions = this.DEFAULT_FPZ_OPTIONS;\n        // Default configuration\n        this.options = {};\n        // Configure callback function for the map\n        this.mapReady = new EventEmitter();\n        this.element = el;\n    }\n    LeafletDirective.prototype.ngOnInit = function () {\n        // Create the map with some reasonable defaults\n        this.map = L.map(this.element.nativeElement, this.options);\n        // Only setView if there is a center/zoom\n        if (null != this.center && null != this.zoom) {\n            this.setView(this.center, this.zoom);\n        }\n        // Set up all the initial settings\n        if (null != this.fitBounds) {\n            this.setFitBounds(this.fitBounds);\n        }\n        this.doResize();\n        // Fire map ready event\n        this.mapReady.emit(this.map);\n    };\n    LeafletDirective.prototype.ngOnChanges = function (changes) {\n        /*\n         * The following code is to address an issue with our (basic) implementation of\n         * zooming and panning. From our testing, it seems that a pan operation followed\n         * by a zoom operation in the same thread will interfere with eachother. The zoom\n         * operation interrupts/cancels the pan, resulting in a final center point that is\n         * inaccurate. The solution seems to be to either separate them with a timeout or\n          * to collapse them into a setView call.\n         */\n        // Zooming and Panning\n        if (changes['zoom'] && changes['center'] && null != this.zoom && null != this.center) {\n            this.setView(changes['center'].currentValue, changes['zoom'].currentValue);\n        }\n        else if (changes['zoom']) {\n            this.setZoom(changes['zoom'].currentValue);\n        }\n        else if (changes['center']) {\n            this.setCenter(changes['center'].currentValue);\n        }\n        // Fit bounds\n        if (changes['fitBounds']) {\n            this.setFitBounds(changes['fitBounds'].currentValue);\n        }\n    };\n    LeafletDirective.prototype.getMap = function () {\n        return this.map;\n    };\n    LeafletDirective.prototype.onResize = function () {\n        this.delayResize();\n    };\n    /**\n     * Resize the map to fit it's parent container\n     */\n    LeafletDirective.prototype.doResize = function () {\n        // Invalidate the map size to trigger it to update itself\n        this.map.invalidateSize({});\n    };\n    /**\n     * Manage a delayed resize of the component\n     */\n    LeafletDirective.prototype.delayResize = function () {\n        if (null != this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.resizeTimer = setTimeout(this.doResize.bind(this), 200);\n    };\n    /**\n     * Set the view (center/zoom) all at once\n     * @param center The new center\n     * @param zoom The new zoom level\n     */\n    LeafletDirective.prototype.setView = function (center, zoom) {\n        if (this.map && null != center && null != zoom) {\n            this.map.setView(center, zoom, this.zoomPanOptions);\n        }\n    };\n    /**\n     * Set the map zoom level\n     * @param zoom the new zoom level for the map\n     */\n    LeafletDirective.prototype.setZoom = function (zoom) {\n        if (this.map && null != zoom) {\n            this.map.setZoom(zoom, this.zoomOptions);\n        }\n    };\n    /**\n     * Set the center of the map\n     * @param center the center point\n     */\n    LeafletDirective.prototype.setCenter = function (center) {\n        if (this.map && null != center) {\n            this.map.panTo(center, this.panOptions);\n        }\n    };\n    /**\n     * Fit the map to the bounds\n     * @param center the center point\n     */\n    LeafletDirective.prototype.setFitBounds = function (latLngBounds) {\n        if (this.map && null != latLngBounds) {\n            this.map.fitBounds(latLngBounds, this.fitBoundsOptions);\n        }\n    };\n    return LeafletDirective;\n}());\nexport { LeafletDirective };\nLeafletDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[leaflet]'\n            },] },\n];\n/** @nocollapse */\nLeafletDirective.ctorParameters = function () { return [\n    { type: ElementRef, },\n]; };\nLeafletDirective.propDecorators = {\n    'fitBoundsOptions': [{ type: Input, args: ['leafletFitBoundsOptions',] },],\n    'panOptions': [{ type: Input, args: ['leafletPanOptions',] },],\n    'zoomOptions': [{ type: Input, args: ['leafletZoomOptions',] },],\n    'zoomPanOptions': [{ type: Input, args: ['leafletZoomPanOptions',] },],\n    'options': [{ type: Input, args: ['leafletOptions',] },],\n    'mapReady': [{ type: Output, args: ['leafletMapReady',] },],\n    'zoom': [{ type: Input, args: ['leafletZoom',] },],\n    'center': [{ type: Input, args: ['leafletCenter',] },],\n    'fitBounds': [{ type: Input, args: ['leafletFitBounds',] },],\n    'onResize': [{ type: HostListener, args: ['window:resize', [],] },],\n};\n//# sourceMappingURL=leaflet.directive.js.map","var LeafletDirectiveWrapper = (function () {\n    function LeafletDirectiveWrapper(leafletDirective) {\n        this.leafletDirective = leafletDirective;\n    }\n    LeafletDirectiveWrapper.prototype.init = function () {\n        // Nothing for now\n    };\n    LeafletDirectiveWrapper.prototype.getMap = function () {\n        return this.leafletDirective.getMap();\n    };\n    return LeafletDirectiveWrapper;\n}());\nexport { LeafletDirectiveWrapper };\n//# sourceMappingURL=leaflet.directive.wrapper.js.map","var LeafletLayerDiff = (function () {\n    function LeafletLayerDiff(remove, add) {\n        this.remove = remove;\n        this.add = add;\n    }\n    return LeafletLayerDiff;\n}());\nexport { LeafletLayerDiff };\n//# sourceMappingURL=leaflet-layer-diff.model.js.map","import { LeafletLayerDiff } from './leaflet-layer-diff.model';\nvar LeafletLayersUtil = (function () {\n    function LeafletLayersUtil() {\n    }\n    LeafletLayersUtil.diffLayers = function (newLayers, prevLayers) {\n        var toRemove;\n        var toAdd;\n        if (null == newLayers) {\n            newLayers = [];\n        }\n        if (null == prevLayers) {\n            prevLayers = [];\n        }\n        // Figure out which layers need to be removed (prev - new)\n        toRemove = prevLayers\n            .filter(function (pl) {\n            return !(newLayers.find(function (nl) { return (pl === nl); }));\n        });\n        // Figure out which layers need to be added (new - prev)\n        toAdd = newLayers\n            .filter(function (pl) {\n            return !(prevLayers.find(function (nl) { return (pl === nl); }));\n        });\n        return new LeafletLayerDiff(toRemove, toAdd);\n    };\n    return LeafletLayersUtil;\n}());\nexport { LeafletLayersUtil };\n//# sourceMappingURL=leaflet-layers.util.js.map","import { Directive, Input } from '@angular/core';\nimport { LeafletDirective } from '../core/leaflet.directive';\nimport { LeafletDirectiveWrapper } from '../core/leaflet.directive.wrapper';\nimport { LeafletLayersUtil } from './leaflet-layers.util';\nvar LeafletLayersDirective = (function () {\n    function LeafletLayersDirective(leafletDirective) {\n        this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n    }\n    LeafletLayersDirective.prototype.ngOnInit = function () {\n        // Init the map\n        this.leafletDirective.init();\n        // The way we've set this up, map isn't set until after the first round of changes has gone through\n        this.setLayers(this.layers, []);\n    };\n    LeafletLayersDirective.prototype.ngOnChanges = function (changes) {\n        // Set the layers\n        if (changes['layers']) {\n            var c = changes['layers'].currentValue;\n            var p = (changes['layers'].isFirstChange()) ? [] : changes['layers'].previousValue;\n            this.setLayers(c, p);\n        }\n    };\n    /**\n     * Replace the current layers in the map with the provided array\n     * @param layers The new complete array of layers for the map\n     */\n    LeafletLayersDirective.prototype.setLayers = function (newLayers, prevLayers) {\n        var map = this.leafletDirective.getMap();\n        if (null != map) {\n            var diff = LeafletLayersUtil.diffLayers(newLayers, prevLayers);\n            // Remove the layers\n            diff.remove.forEach(function (l) { map.removeLayer(l); });\n            // Add the new layers\n            diff.add.forEach(function (l) { map.addLayer(l); });\n        }\n    };\n    return LeafletLayersDirective;\n}());\nexport { LeafletLayersDirective };\nLeafletLayersDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[leafletLayers]'\n            },] },\n];\n/** @nocollapse */\nLeafletLayersDirective.ctorParameters = function () { return [\n    { type: LeafletDirective, },\n]; };\nLeafletLayersDirective.propDecorators = {\n    'layers': [{ type: Input, args: ['leafletLayers',] },],\n};\n//# sourceMappingURL=leaflet-layers.directive.js.map","var LeafletUtil = (function () {\n    function LeafletUtil() {\n    }\n    /**\n     * Combine two associative arrays in a shallow manner. Where there are duplicate properties,\n     * the value in the second object will overwrite the value of the first object\n     *\n     * @param aMap The first object\n     * @param bMap The second object\n     * @returns {{}} The aggregate of both objects\n     */\n    LeafletUtil.mergeMaps = function (aMap, bMap) {\n        var toReturn = {};\n        if (null != aMap) {\n            for (var k in aMap) {\n                if (aMap.hasOwnProperty(k)) {\n                    toReturn[k] = aMap[k];\n                }\n            }\n        }\n        if (null != bMap) {\n            for (var k in bMap) {\n                if (bMap.hasOwnProperty(k)) {\n                    toReturn[k] = bMap[k];\n                }\n            }\n        }\n        return toReturn;\n    };\n    /**\n     * Subtracts the properties of an associative array in a shallow manner.\n     * Where there are duplicate properties, the properties will be removed\n     * from the first object.\n     *\n     * @param aMap The object from which to subtract properties\n     * @param bMap The object containing properties to subtract\n     * @returns {{}}\n     */\n    LeafletUtil.mapSubtract = function (aMap, bMap) {\n        var toReturn = {};\n        if (null != aMap) {\n            // Copy all of aMap into toReturn\n            for (var k in aMap) {\n                if (aMap.hasOwnProperty(k)) {\n                    toReturn[k] = aMap[k];\n                }\n            }\n            // If there's a bMap, delete all bMap keys from aMap\n            if (null != bMap) {\n                for (var k in bMap) {\n                    if (bMap.hasOwnProperty(k)) {\n                        delete toReturn[k];\n                    }\n                }\n            }\n        }\n        return toReturn;\n    };\n    LeafletUtil.mapToArray = function (map) {\n        var toReturn = [];\n        for (var k in map) {\n            if (map.hasOwnProperty(k)) {\n                toReturn.push(map[k]);\n            }\n        }\n        return toReturn;\n    };\n    return LeafletUtil;\n}());\nexport { LeafletUtil };\n//# sourceMappingURL=leaflet.util.js.map","var LeafletLayersObjectDiff = (function () {\n    function LeafletLayersObjectDiff(remove, add) {\n        this.remove = remove;\n        this.add = add;\n    }\n    return LeafletLayersObjectDiff;\n}());\nexport { LeafletLayersObjectDiff };\n//# sourceMappingURL=leaflet-layers-object-diff.model.js.map","import * as L from 'leaflet';\nimport { LeafletUtil } from '../../core/leaflet.util';\nimport { LeafletLayersObjectDiff } from './leaflet-layers-object-diff.model';\nvar LeafletControlLayersWrapper = (function () {\n    function LeafletControlLayersWrapper() {\n    }\n    LeafletControlLayersWrapper.prototype.getLayersControl = function () {\n        return this.layersControl;\n    };\n    LeafletControlLayersWrapper.prototype.init = function (controlConfig, controlOptions) {\n        var baseLayers = controlConfig.baseLayers || {};\n        var overlays = controlConfig.overlays || {};\n        this.layersControl = L.control.layers(baseLayers, overlays, controlOptions);\n        return this.layersControl;\n    };\n    LeafletControlLayersWrapper.prototype.setLayersControlConfig = function (newConfig, prevConfig) {\n        if (null == this.layersControl) {\n            return new LeafletLayersObjectDiff({}, {});\n        }\n        var toRemove;\n        var baseLayers;\n        var overlays;\n        // Figure out which layers need to be removed (prev - new)\n        toRemove = LeafletUtil.mergeMaps(LeafletUtil.mapSubtract(prevConfig.baseLayers, newConfig.baseLayers), LeafletUtil.mapSubtract(prevConfig.overlays, newConfig.overlays));\n        // Figure out which layers need to be added (new - prev)\n        baseLayers = LeafletUtil.mapSubtract(newConfig.baseLayers, prevConfig.baseLayers);\n        overlays = LeafletUtil.mapSubtract(newConfig.overlays, prevConfig.overlays);\n        // Do the actual removal and addition\n        for (var k in toRemove) {\n            if (toRemove.hasOwnProperty(k)) {\n                var l = toRemove[k];\n                this.layersControl.removeLayer(l);\n            }\n        }\n        for (var k in baseLayers) {\n            if (baseLayers.hasOwnProperty(k)) {\n                var l = baseLayers[k];\n                this.layersControl.addBaseLayer(l, k);\n            }\n        }\n        for (var k in overlays) {\n            if (overlays.hasOwnProperty(k)) {\n                var l = overlays[k];\n                this.layersControl.addOverlay(l, k);\n            }\n        }\n        return new LeafletLayersObjectDiff(toRemove, LeafletUtil.mergeMaps(baseLayers, overlays));\n    };\n    return LeafletControlLayersWrapper;\n}());\nexport { LeafletControlLayersWrapper };\n//# sourceMappingURL=leaflet-control-layers.wrapper.js.map","import { Directive, Input } from '@angular/core';\nimport { LeafletDirective } from '../../core/leaflet.directive';\nimport { LeafletDirectiveWrapper } from '../../core/leaflet.directive.wrapper';\nimport { LeafletControlLayersWrapper } from './leaflet-control-layers.wrapper';\nvar LeafletLayersControlDirective = (function () {\n    function LeafletLayersControlDirective(leafletDirective) {\n        this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n        this.controlLayers = new LeafletControlLayersWrapper();\n    }\n    LeafletLayersControlDirective.prototype.ngOnInit = function () {\n        // Init the map\n        this.leafletDirective.init();\n        // Set up all the initial settings\n        this.controlLayers\n            .init(this.layersControlConfig, this.layersControlOptions)\n            .addTo(this.leafletDirective.getMap());\n    };\n    LeafletLayersControlDirective.prototype.ngOnChanges = function (changes) {\n        // Set the layers\n        if (changes['layersControlCfg']) {\n            this.controlLayers.setLayersControlConfig(changes['layersControlCfg'].currentValue, changes['layersControlCfg'].previousValue);\n        }\n    };\n    return LeafletLayersControlDirective;\n}());\nexport { LeafletLayersControlDirective };\nLeafletLayersControlDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[leafletLayersControl]'\n            },] },\n];\n/** @nocollapse */\nLeafletLayersControlDirective.ctorParameters = function () { return [\n    { type: LeafletDirective, },\n]; };\nLeafletLayersControlDirective.propDecorators = {\n    'layersControlConfig': [{ type: Input, args: ['leafletLayersControl',] },],\n    'layersControlOptions': [{ type: Input, args: ['leafletLayersControlOptions',] },],\n};\n//# sourceMappingURL=leaflet-control-layers.directive.js.map","var LeafletControlLayersConfig = (function () {\n    function LeafletControlLayersConfig(baseLayers, overlays) {\n        this.baseLayers = baseLayers;\n        this.overlays = overlays;\n    }\n    return LeafletControlLayersConfig;\n}());\nexport { LeafletControlLayersConfig };\n//# sourceMappingURL=leaflet-control-layers-config.model.js.map","import { Directive, Input } from '@angular/core';\nimport { LeafletUtil } from '../../core/leaflet.util';\nimport { LeafletDirective } from '../../core/leaflet.directive';\nimport { LeafletDirectiveWrapper } from '../../core/leaflet.directive.wrapper';\nimport { LeafletControlLayersWrapper } from '../control/leaflet-control-layers.wrapper';\nimport { LeafletControlLayersConfig } from '../control/leaflet-control-layers-config.model';\nvar LeafletBaseLayersDirective = (function () {\n    function LeafletBaseLayersDirective(leafletDirective) {\n        this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n        this.controlLayers = new LeafletControlLayersWrapper();\n    }\n    LeafletBaseLayersDirective.prototype.ngOnInit = function () {\n        // Init the map\n        this.leafletDirective.init();\n        // Initially configure the controlLayers\n        this.controlLayers\n            .init({ baseLayers: this.baseLayers }, this.layersControlOptions)\n            .addTo(this.leafletDirective.getMap());\n        // Sync the baselayer (will default to the first layer in the map)\n        this.syncBaseLayer();\n    };\n    LeafletBaseLayersDirective.prototype.ngOnChanges = function (changes) {\n        // Set the new baseLayers\n        if (changes['baseLayers']) {\n            this.setBaseLayers(changes['baseLayers'].currentValue, changes['baseLayers'].previousValue);\n        }\n    };\n    LeafletBaseLayersDirective.prototype.setBaseLayers = function (newBaseLayers, prevBaseLayers) {\n        // Update the layers control\n        this.controlLayers.setLayersControlConfig(new LeafletControlLayersConfig(newBaseLayers), new LeafletControlLayersConfig(prevBaseLayers));\n        // Sync the new baseLayer\n        this.syncBaseLayer();\n    };\n    /**\n     * Check the current base layer and change it to the new one if necessary\n     */\n    LeafletBaseLayersDirective.prototype.syncBaseLayer = function () {\n        var map = this.leafletDirective.getMap();\n        var layers = LeafletUtil.mapToArray(this.baseLayers);\n        var foundLayer;\n        // Search all the layers in the map to see if we can find them in the baselayer array\n        map.eachLayer(function (l) {\n            foundLayer = layers.find(function (bl) { return l === bl; });\n        });\n        // Did we find the layer?\n        if (null != foundLayer) {\n            // Yes - set the baselayer to the one we found\n            this.baseLayer = foundLayer;\n        }\n        else {\n            // No - set the baselayer to the first in the array and add it to the map\n            if (layers.length > 0) {\n                this.baseLayer = layers[0];\n                this.baseLayer.addTo(map);\n            }\n        }\n    };\n    return LeafletBaseLayersDirective;\n}());\nexport { LeafletBaseLayersDirective };\nLeafletBaseLayersDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[leafletBaseLayers]'\n            },] },\n];\n/** @nocollapse */\nLeafletBaseLayersDirective.ctorParameters = function () { return [\n    { type: LeafletDirective, },\n]; };\nLeafletBaseLayersDirective.propDecorators = {\n    'baseLayers': [{ type: Input, args: ['leafletBaseLayers',] },],\n    'layersControlOptions': [{ type: Input, args: ['leafletLayersControlOptions',] },],\n};\n//# sourceMappingURL=leaflet-baselayers.directive.js.map","import { NgModule } from '@angular/core';\nimport { LeafletDirective } from './core/leaflet.directive';\nimport { LeafletLayersDirective } from './layers/leaflet-layers.directive';\nimport { LeafletLayersControlDirective } from './layers/control/leaflet-control-layers.directive';\nimport { LeafletBaseLayersDirective } from './layers/base/leaflet-baselayers.directive';\nvar LeafletModule = (function () {\n    function LeafletModule() {\n    }\n    LeafletModule.forRoot = function () {\n        return { ngModule: LeafletModule, providers: [] };\n    };\n    return LeafletModule;\n}());\nexport { LeafletModule };\nLeafletModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [\n                    LeafletDirective,\n                    LeafletLayersDirective,\n                    LeafletLayersControlDirective,\n                    LeafletBaseLayersDirective\n                ],\n                declarations: [\n                    LeafletDirective,\n                    LeafletLayersDirective,\n                    LeafletLayersControlDirective,\n                    LeafletBaseLayersDirective\n                ]\n            },] },\n];\n/** @nocollapse */\nLeafletModule.ctorParameters = function () { return []; };\n//# sourceMappingURL=leaflet.module.js.map","import { LeafletUtil } from '../../core/leaflet.util';\nimport { LeafletLayersObjectDiff } from '../control/leaflet-layers-object-diff.model';\nvar LeafletControlLayersUtil = (function () {\n    function LeafletControlLayersUtil() {\n    }\n    LeafletControlLayersUtil.prototype.diffLayers = function (newLayers, prevLayers) {\n        var toRemove;\n        var toAdd;\n        // Figure out which layers need to be removed (prev - new)\n        toRemove = LeafletUtil.mapSubtract(prevLayers, newLayers);\n        // Figure out which layers need to be added (new - prev)\n        toAdd = LeafletUtil.mapSubtract(newLayers, prevLayers);\n        return new LeafletLayersObjectDiff(toRemove, toAdd);\n    };\n    return LeafletControlLayersUtil;\n}());\nexport { LeafletControlLayersUtil };\n//# sourceMappingURL=leaflet-control-layers.util.js.map","var LeafletTileLayerDefinition = (function () {\n    function LeafletTileLayerDefinition(type, url, options) {\n        this.type = type;\n        this.url = url;\n        this.options = options;\n    }\n    /**\n     * Creates a TileLayer from the provided definition. This is a convenience function\n     * to help with generating layers from objects.\n     *\n     * @param layerDef The layer to create\n     * @returns {L.TileLayer} The TileLayer that has been created\n     */\n    LeafletTileLayerDefinition.createTileLayer = function (layerDef) {\n        var layer;\n        switch (layerDef.type) {\n            case 'xyz':\n                layer = L.tileLayer(layerDef.url, layerDef.options);\n                break;\n            case 'wms':\n            default:\n                layer = L.tileLayer.wms(layerDef.url, layerDef.options);\n                break;\n        }\n        return layer;\n    };\n    /**\n     * Creates a TileLayer for each key in the incoming map. This is a convenience function\n     * for generating an associative array of layers from an associative array of objects\n     *\n     * @param layerDefs A map of key to tile layer definition\n     * @returns {{[p: string]: L.TileLayer}} A new map of key to TileLayer\n     */\n    LeafletTileLayerDefinition.createTileLayers = function (layerDefs) {\n        var layers = {};\n        for (var k in layerDefs) {\n            if (layerDefs.hasOwnProperty(k)) {\n                layers[k] = (LeafletTileLayerDefinition.createTileLayer(layerDefs[k]));\n            }\n        }\n        return layers;\n    };\n    /**\n     * Create a Tile Layer from the current state of this object\n     *\n     * @returns {L.TileLayer} A new TileLayer\n     */\n    LeafletTileLayerDefinition.prototype.createTileLayer = function () {\n        return LeafletTileLayerDefinition.createTileLayer(this);\n    };\n    return LeafletTileLayerDefinition;\n}());\nexport { LeafletTileLayerDefinition };\n//# sourceMappingURL=leaflet-tile-layer-definition.model.js.map"],"names":["L.latLng","EventEmitter","L.map","Directive","ElementRef","Input","Output","HostListener","map","L.control","NgModule"],"mappings":"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"}